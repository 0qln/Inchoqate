<Application x:Class="Inchoqate.GUI.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Inchoqate.GUI"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>


            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Main/Editor/FlowChart/N_GrayScale.xaml"/>
                <ResourceDictionary x:Name="ThemeDictionary">
                    <ResourceDictionary.MergedDictionaries>
                        <ResourceDictionary Source="Themes/Default.xaml"/>
                    </ResourceDictionary.MergedDictionaries>
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>

            <local:CommandBindingToStringConverter x:Key="C_CommandBinding_String"/>

            <Style x:Key="BorderlessWindow" TargetType="{x:Type local:BorderlessWindow}">
                
                <!-- 
                This can be removed to enable smooth window resizing animations, 
                but then the window resizing glitch fix will also sieze to work. 
                -->
                <Setter Property="WindowStyle" Value="None"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="AllowsTransparency" Value="True"/>
                <!---->

                <Setter Property="CornerRadius" Value="15"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="CaptionHeight" Value="30"/>

                <Setter Property="WindowChrome.WindowChrome">
                    <Setter.Value>
                        <WindowChrome x:Name="WindowChrome"
                                      CornerRadius="{Binding Path=CornerRadius, RelativeSource={RelativeSource AncestorType={x:Type local:BorderlessWindow}}}" 
                                      CaptionHeight="{Binding Path=CaptionHeight, RelativeSource={RelativeSource AncestorType={x:Type local:BorderlessWindow}}}"/>
                    </Setter.Value>
                </Setter>
                
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:BorderlessWindow}">
                            <Border x:Name="WindowContainer" 
                                    Loaded="BorderlessWindowContainer_Loaded"
                                    SizeChanged="WindowContainer_SizeChanged"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{TemplateBinding CornerRadius}"
                                    BorderBrush="Black">
                                <ContentPresenter Content="{TemplateBinding Content}" 
                                                  ClipToBounds="True" 
                                                  VerticalAlignment="Stretch" 
                                                  HorizontalAlignment="Stretch"/>
                            </Border>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsActive" Value="True">
                                    <Trigger.Setters>
                                        <Setter Property="BorderBrush" TargetName="WindowContainer" Value="White"/>
                                    </Trigger.Setters>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                
            </Style>
            
            
        </ResourceDictionary>
    </Application.Resources>
</Application>
